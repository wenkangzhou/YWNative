__d(function(e,i,t,n){"use strict";function s(e){var i=!1,t=!1,n=!1,s=!1;Object.defineProperty(e,"AccessibilityTraits",{get:function(){return u(i,"View.AccessibilityTraits has been deprecated and will be removed in a future version of ReactNative. Use ViewAccessibility.AccessibilityTraits instead."),i=!0,y}}),Object.defineProperty(e,"AccessibilityComponentType",{get:function(){return u(t,"View.AccessibilityComponentType has been deprecated and will be removed in a future version of ReactNative. Use ViewAccessibility.AccessibilityComponentTypes instead."),t=!0,f}}),Object.defineProperty(e,"forceTouchAvailable",{get:function(){return u(n,"View.forceTouchAvailable has been deprecated and will be removed in a future version of ReactNative. Use NativeModules.PlatformConstants.forceTouchAvailable instead."),n=!0,v}}),Object.defineProperty(e,"propTypes",{get:function(){return u(s,"View.propTypes has been deprecated and will be removed in a future version of ReactNative. Use ViewPropTypes instead."),s=!0,d}})}var r=i(70),o=i(40),a=(i(50),i(208)),c=i(72),p=(i(209),i(223)),d=i(224),l=i(22),u=i(18),b=i(231),f=b.AccessibilityComponentTypes,y=b.AccessibilityTraits,T=i(233),v=o.PlatformConstants&&o.PlatformConstants.forceTouchAvailable||!1,A=a.createClass({displayName:"View",mixins:[r],propTypes:d,statics:{__propTypesSecretDontUseThesePlease:d},viewConfig:{uiViewClassName:"RCTView",validAttributes:p.RCTView},contextTypes:{isInAParentText:a.PropTypes.bool},render:function(){return l(!this.context.isInAParentText,"Nesting of <View> within <Text> is not supported on Android."),a.createElement(w,this.props)}}),w=T("RCTView",A,{nativeOnly:{nativeBackgroundAndroid:!0,nativeForegroundAndroid:!0}}),m=w;c.useFiber?(s(A),m=A):s(w),t.exports=m},207);